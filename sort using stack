#include<iostream>
using namespace std ; 
class stack {
public:
int top ; 
int *arr ; 
int size; 
stack( int size){
    this->size = size ; 
    this->top = -1; 
    arr = new int [size]; 
}
void push(int element){
    if (size-top>1){
    top++; 
    arr[top] = element ; 
    }
    else
    cout<<"overflow"<<endl; 
}
void pop(){
    if (top>=0)
    top--; 
}
int peek(){
    if (top>=0)
    return arr[top];
    else 
    return -1; 
}
void sort (int arr2[],int n){
   for (int i = 0; i <= n - 2; i++) {
          int  min = i; 
            for (int j = i + 1; j <=  n- 1; j++) {
                if (arr2[j] < arr2[min]) {
                    min = j; 
                }
            }
            // Swapping elements
            int temp = arr2[min]; 
            arr2[min] = arr2[i]; 
            arr2[i] = temp; 
        }
  for (int i = 0 ; i <n; i ++){
      cout <<arr2[i]<<endl; 
  }
        
    }
    
};
int main(){
    stack st(5); 
    st.push(2); 
    st.push(7); 
    st.push(3); 
    st.push(8); 
    st.push(1); 
    int *arr2 =  new int [st.size]; 
    int j = 0 ; 
    while (st.peek()!=-1){
 arr2[j++] = st.peek(); 
 st.pop();
    }
    st.sort(arr2, 5); 
}
